=== Dokuwiki Editable Region Plugin ===

Mark a <P>aragraph as editable in wiki source with 

  <editable>default text</editable>

The EditableRegionPlugin creates a HTML5 element

  <p  contenteditable="true">default text</p>

which is editable natively in the browser.

=== Feature Requests / Stories ===
   * editable paragraph is shown with a 'highlighted' background color   
   * editable paragraph shows "(double)click to edit" onMouseOver
   * there must be a 'save' and 'cancel' button near the editable reagion.


=== Code Flow ===
   * Wikitext contains <editable>....</editable>
   * syntax plugin ''dokuwiki_plugin_inlineEdit'' renders this.
      o actions.act_edit()  - here I can find how to prepare the edit form HTTP parameters
      o html.html_edit() 
   - User (doueble)clicks on editable paragraph region 
   * Nativ editing in browser
   * user clicks save. (onBlur => ask)
   * do=save HTTP request back to DW to actions.act_save just as the edit form would send it.


=== Herausgefunden ===
   * changecheck ist einfach md5(wikitext) - darüber wird festgestellt, ob die Seite sich geändert hat.
     Wird in html_edit einfach durchgeschleift
   * target ist immer per default 'section'. Darüber können andere editoren für spezielle
     sections gesteuert werden. siehe:  https://www.dokuwiki.org/devel:section_editor
     Mmhh, contradicts a bit. This provides and edit button. But what inlinedit3 does is client side JS editing.



=== Open questions ===
Strip HTML from edit? => No dont strip, but quote HTML characters, ie. simply show what has been entered.
